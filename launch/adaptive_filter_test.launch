<launch>

  <!-- arguments -->
  <arg name="filter"              value="true" />
  <arg name="test"                value="true" />

  <!-- Inputs adapted to the script's topics -->
  <arg name="imu"                 value="/imu/data" />
  <arg name="lidar_slam_odom"     value="/lidar/odom" />
  <arg name="tracking_camera_odom" value="/camera/odom" />
  <!-- No separate visual SLAM odom from the script -->
  <arg name="depth_camera_odom"   value="/camera/odom" />
  <arg name="wheel_odom"          value="/wheel/odom" />

  <!-- Unused sensors (commented) -->
  <arg name="stereo_cam_left"     value="/t265/fisheye2/image_raw" />
  <arg name="stereo_cam_right"    value="/t265/fisheye1/image_raw" />
  <arg name="color_image"         value="/d435i/color/image_raw" />

  <!-- Outputs (keep or adjust as your downstream expects) -->
  <arg name="filter_odom"         value="/filter_odom" />
  <arg name="rtabmap_service"     value="/rtabmap/reset_odom_to_pose" />

  <rosparam command="load" file="$(find adaptive_odom_filter)/config/adaptive_filter_parameters.yaml" />

  <!-- OPTIONAL: start the fake publishers here -->
  
  <node if="$(arg test)" pkg="adaptive_odom_filter" type="fake_odometry_path.py" name="fake_odometry_path" output="screen">
    <param name="camera_rate_hz"  value="5.0"/>
    <param name="wheel_rate_hz"   value="10.0"/>
    <param name="lidar_rate_hz"   value="5.0"/>
    <param name="imu_rate_hz"     value="10.0"/>
  </node>

  <!-- Filter -->
  <node if="$(arg filter)" pkg="adaptive_odom_filter" type="EKFAdaptiveFilter" name="EKFAdaptiveFilter" output="screen">
    <remap from="/imu/data"                        to="$(arg imu)"/>
    <remap from="/lidar_odom"                      to="$(arg lidar_slam_odom)"/>
    <remap from="/tracking_odom"                   to="$(arg tracking_camera_odom)"/>
    <remap from="/depth_odom"                      to="$(arg depth_camera_odom)"/>
    <remap from="/odom"                            to="$(arg wheel_odom)"/>
    <remap from="/left_camera"                     to="$(arg stereo_cam_left)"/>
    <remap from="/rigth_camera"                    to="$(arg stereo_cam_right)"/>
    <remap from="/camera_color"                    to="$(arg color_image)"/>
    <remap from="/filter_odom"                     to="$(arg filter_odom)"/>
    <remap from="/rtabmap/reset_odom_to_pose"      to="$(arg rtabmap_service)"/>
  </node>

</launch>
